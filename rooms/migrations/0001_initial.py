# Generated by Django 5.2.1 on 2025-06-02 15:39

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(help_text='Fecha y hora de inicio de la reserva')),
                ('end_time', models.DateTimeField(help_text='Fecha y hora de fin de la reserva')),
                ('purpose', models.CharField(help_text='Propósito o motivo de la reserva', max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('confirmed', 'Confirmada'), ('in_progress', 'En Progreso'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('no_show', 'No se presentó')], default='pending', max_length=20)),
                ('attendees_count', models.PositiveIntegerField(default=1, help_text='Número de personas que asistirán', validators=[django.core.validators.MinValueValidator(1)])),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales sobre la reserva')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Calificación general de 1 a 5 estrellas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('cleanliness_rating', models.PositiveIntegerField(help_text='Calificación de limpieza de 1 a 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('equipment_rating', models.PositiveIntegerField(help_text='Calificación del equipamiento de 1 a 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comfort_rating', models.PositiveIntegerField(help_text='Calificación de comodidad de 1 a 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, help_text='Comentario opcional sobre la experiencia', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='rooms.reservation')),
            ],
            options={
                'verbose_name': 'Reseña',
                'verbose_name_plural': 'Reseñas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre único de la sala', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Descripción detallada de la sala y sus características')),
                ('capacity', models.PositiveIntegerField(help_text='Capacidad máxima de personas', validators=[django.core.validators.MinValueValidator(1)])),
                ('equipment', models.TextField(blank=True, help_text='Equipamiento disponible (proyector, pizarra, etc.)')),
                ('location', models.CharField(help_text='Ubicación física de la sala', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la sala está disponible para reservas')),
                ('hourly_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tarifa por hora (0.00 = gratuita)', max_digits=8)),
                ('opening_time', models.TimeField(default=datetime.time(8, 0), help_text='Hora de apertura de la sala')),
                ('closing_time', models.TimeField(default=datetime.time(22, 0), help_text='Hora de cierre de la sala')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Salas',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='rooms.room'),
        ),
    ]
